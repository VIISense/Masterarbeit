Last try before restricting k<l to k<n or n<l with n being a natural number:

k<l: system of inequalities because I do not see (right now?) how to "see" when to block. I want to create a system with all assertion, which are affected by the considered assertion x:succ(k<l)
If the system has a solution (given by a solver) such that we can insert natural numbers for the variables (in the system) then we do not want to block, otherwise we want. However i will need to proof that the algorithm can find this solution and hence terminate. My proof idea right now is, that the algorithm only adds variable if needed and hence we can not miss the solution. And if for a k<l we add a variable y such that l increases but k<l were not responsible for adding y then there is an assertion which also had to be translated into the system before.

But maybe this idea is to risky. Also i am not sure in which runtime it would run.....

Other changes:
rearrange things,
added a small portion of the proof section (there i found my problem with k<l), which has not been proven yet.

Have to do: form of the solution, still written messy